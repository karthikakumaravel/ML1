# -*- coding: utf-8 -*-
"""L1L2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lP9h1MG_Azmgj7NSFZ0lrfDKieFu3xTz
"""

import numpy as np
import matplotlib.pyplot as plt

x=np.array([1,2,3,4,5])
y=np.array([2,4,6,8,10])

x_b=np.c_[np.ones((x.shape[0],1)),x]
x_b

alpha_ridge=1.0
alpha_lasso=0.1
num_iteration=1000
learning_rate=0.01

def lasso_regression(x,y,alpha,num_iteration,learning_rate):
  m,n=x.shape#row column
  theta=np.zeros(n)# weights definee
  for _ in range(num_iteration):
    y_pred=x.dot(theta)
    gradient=(x.T.dot(y_pred-y)+alpha*np.sign(theta))/m
    theta-= learning_rate*gradient
  return theta

def ridge_regression(x,y,alpha,num_iteration,learning_rate):
  m,n=x.shape#row column
  theta=np.zeros(n)# weights definee
  for _ in range(num_iteration):
    y_pred=x.dot(theta)
    gradient=(x.T.dot(y_pred-y)+alpha*theta)/m
    theta-= learning_rate*gradient
  return theta

theta_ridge=ridge_regression(x_b,y,alpha_ridge,num_iteration,learning_rate)
theta_lasso=lasso_regression(x_b,y,alpha_lasso,num_iteration,learning_rate)

plt.scatter(x,y,label='data')
plt.plot(x,x_b.dot(theta_ridge),label=f'Ridge (L2) Regression',color='red')
plt.plot(x,x_b.dot(theta_lasso),label=f'Lasso (L1) Regression',color='blue')
plt.xlabel('X')
plt.ylabel('y')
plt.legend()
plt.show()