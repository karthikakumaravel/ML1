# -*- coding: utf-8 -*-
"""Decission tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-oGEO_dHuHCvOKFqPzHI7UIscPxlxn8-
"""

import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

data=pd.read_csv('https://raw.githubusercontent.com/nunnarilabs/ml/master/car_data/car.data',names=['buying','maint','doors','persons','lug_boot','safety','class'])
data

data['class'].value_counts()

data[data['doors']=='4']

data.isnull().sum()

data.describe()

data['class'].unique()

data['class'],class_names=pd.factorize(data['class'])
print(class_names)

data_backup=data.copy()
data_backup.head()

data['buying'],_=pd.factorize(data['buying'])
data['maint'],_=pd.factorize(data['maint'])
data['doors'],_=pd.factorize(data['doors'])
data['persons'],_=pd.factorize(data['persons'])
data['lug_boot'],_=pd.factorize(data['lug_boot'])
data['safety'],_=pd.factorize(data['safety'])

data_backup=data.copy()
data_backup.head()
#numerical to categoricall

"""label encoder-101
a=0,b=1,c=2
get dummies-one hot encoding
embarked_a,embarked_b  1,0 0,1 1,0

one hot-- any 1 value is 1 all others are 0

used to convert numerical to categorical values
"""

x=data.iloc[:,0:-1]
y=data.iloc[:,-1]

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=0)#random state,no mix  fist

#model define,fit,train

x.columns

#gini to identify quality of split

from sklearn import tree,metrics
dtree =tree.DecisionTreeClassifier(criterion='gini')
dtree.fit(x_train,y_train)

#predict the trained model using variable

y_train_pred=dtree.predict(x_test)

accuracy=metrics.accuracy_score(y_test,y_train_pred)
print('Train accuracy:{:.2f}'.format(accuracy))

y_train_pred=dtree.predict(x_train)

accuracy=metrics.accuracy_score(y_train,y_train_pred)
print('Train accuracy:{:.2f}'.format(accuracy))